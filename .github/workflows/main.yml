# This is a basic workflow to help you get started with Actions

name: DeployFunctionApp

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  AZURE_FUNCTIONAPP_NAME: functionghactions    # set this to your application's name
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'          # set this to the path to your web app project, defaults to the repository root

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  release:
    runs-on: [ubuntu-latest]
    
    steps:
      - name: Checkout files
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v2
           
      - name: Azure Login
        uses: Azure/login@v1
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: Azure CLI Action
        uses: Azure/cli@v1.0.0
        with:
          # Specify the script here
          inlineScript: |
            az storage account create --name ${{ env.AZURE_FUNCTIONAPP_NAME }} --resource-group ${{ env.AZURE_FUNCTIONAPP_NAME }} --sku Standard_LRS
            az functionapp create --name ${{ env.AZURE_FUNCTIONAPP_NAME }} --resource-group ${{ env.AZURE_FUNCTIONAPP_NAME }} --storage-account ${{ env.AZURE_FUNCTIONAPP_NAME }} --consumption-plan-location northeurope
      
      - name: Azure Functions Action
        uses: Azure/functions-action@v1.1.3
        with:
          # Name of the Azure Function App
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          # Path to package or folder. *.zip or a folder to deploy
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
